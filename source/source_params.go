// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/conduitio/conduit-connector-sdk/cmd/paramgen

package source

import "github.com/conduitio/conduit-commons/config"

func (Config) Parameters() config.Parameters {
	return map[string]config.Parameter{
		"batchSize": {
			Default:     "1000",
			Description: "The size of an element batch.",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{
				config.ValidationGreaterThan{Value: 0},
				config.ValidationLessThan{Value: 100001},
			},
		},
		"container": {
			Default:     "",
			Description: "The name of a container the connector should work with.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		"database": {
			Default:     "",
			Description: "The name of a database the connector should work with.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		"keys": {
			Default:     "",
			Description: "Comma-separated list of key names to build the opencdc.Record.Key.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		"metaProperties": {
			Default:     "false",
			Description: "metaProperties whether the connector takes the next automatically generated meta-properties: \"_rid\", \"_ts\", \"_self\", \"_etag\", \"_attachments\".",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		"orderingKey": {
			Default:     "",
			Description: "The name of a key that is used for ordering items.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		"partitionValue": {
			Default:     "",
			Description: "The logical partition key value.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		"primaryKey": {
			Default:     "",
			Description: "The key for authentication with Azure Cosmos DB.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		"snapshot": {
			Default:     "true",
			Description: "Determines whether the connector takes a snapshot of all items before starting CDC mode.",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		"uri": {
			Default:     "",
			Description: "The connection uri pointed to an Azure Cosmos DB for NoSQL instance.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
	}
}
